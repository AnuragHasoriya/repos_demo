{"ast":null,"code":"import axios from 'axios';\nimport Promise from 'bluebird';\nexport const searchService = {\n  getSearchedRepo\n};\n\nfunction getSearchedRepo(username) {\n  return new Promise(function (resolve, reject) {\n    axios({\n      url: `https://api.github.com/users/${username}`,\n      method: 'get'\n    }).then(result => {\n      if (result.data.errors) {\n        reject({\n          message: 'something went wrong',\n          error: result.data.errors\n        });\n        return;\n      }\n\n      resolve(result.data.data);\n    }).catch(error => {\n      reject({\n        message: error.message,\n        error: error\n      });\n    });\n  });\n}","map":{"version":3,"sources":["D:/git/repos/src/services/searchService.js"],"names":["axios","Promise","searchService","getSearchedRepo","username","resolve","reject","url","method","then","result","data","errors","message","error","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA;AADyB,CAAtB;;AAIP,SAASA,eAAT,CAAyBC,QAAzB,EAAmC;AAE/B,SAAO,IAAIH,OAAJ,CAAY,UAAUI,OAAV,EAAmBC,MAAnB,EAA2B;AAC5CN,IAAAA,KAAK,CAAC;AACJO,MAAAA,GAAG,EAAG,gCAA+BH,QAAS,EAD1C;AAEJI,MAAAA,MAAM,EAAE;AAFJ,KAAD,CAAL,CAGGC,IAHH,CAGSC,MAAD,IAAY;AAClB,UAAIA,MAAM,CAACC,IAAP,CAAYC,MAAhB,EAAwB;AACtBN,QAAAA,MAAM,CAAC;AAAEO,UAAAA,OAAO,EAAE,sBAAX;AAAmCC,UAAAA,KAAK,EAAEJ,MAAM,CAACC,IAAP,CAAYC;AAAtD,SAAD,CAAN;AACA;AACD;;AACDP,MAAAA,OAAO,CAACK,MAAM,CAACC,IAAP,CAAYA,IAAb,CAAP;AACD,KATD,EASGI,KATH,CASSD,KAAK,IAAI;AAChBR,MAAAA,MAAM,CAAC;AAAEO,QAAAA,OAAO,EAAEC,KAAK,CAACD,OAAjB;AAA0BC,QAAAA,KAAK,EAAEA;AAAjC,OAAD,CAAN;AACD,KAXD;AAYD,GAbM,CAAP;AAcD","sourcesContent":["import axios from 'axios';\r\nimport Promise from 'bluebird';\r\n\r\nexport const searchService = {\r\n    getSearchedRepo,\r\n}\r\n\r\nfunction getSearchedRepo(username) {\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      axios({\r\n        url: `https://api.github.com/users/${username}`,\r\n        method: 'get',\r\n      }).then((result) => {\r\n        if (result.data.errors) {\r\n          reject({ message: 'something went wrong', error: result.data.errors });\r\n          return;\r\n        }\r\n        resolve(result.data.data);\r\n      }).catch(error => {\r\n        reject({ message: error.message, error: error })\r\n      });\r\n    });\r\n  }"]},"metadata":{},"sourceType":"module"}