{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\repos\\\\src\\\\compenent\\\\repo.js\";\nimport React from 'react'; // import {connect} from 'react-redux';\n\nimport { Component } from 'react';\nimport { Input, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport { searchActions } from '../action/searchActions';\nimport { searchService } from '../services/searchService';\nimport './repo.css';\nconst {\n  Search\n} = Input;\n\nclass Repo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getRepos = username => {\n      let resData = [];\n\n      if (username) {\n        searchService.getSearchedRepo(username).then(function (res) {\n          console.log(res);\n          res && res.forEach(value => {\n            resData.push({\n              title: value.name,\n              description: value.description,\n              lastUpdated: value.updated_at\n            });\n          });\n        }, function (rej) {\n          console.log(rej);\n          this.setState({\n            data: resData\n          });\n        }).then(() => {\n          this.setState({\n            data: resData\n          });\n        });\n      }\n    };\n\n    this.state = {\n      columns: [{\n        title: 'Title',\n        dataIndex: 'title'\n      }, {\n        title: 'Description',\n        dataIndex: 'description'\n      }, {\n        title: 'LastUpdated',\n        dataIndex: 'lastUpdated'\n      }],\n      data: []\n    };\n  }\n\n  render() {\n    const {\n      columns,\n      data\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"Find Your Repo...\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      placeholder: \"input search text\",\n      enterButton: \"Search\",\n      size: \"large\",\n      onSearch: value => this.getRepos(value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    })), data.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"repo-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      columns: columns,\n      dataSource: data,\n      size: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"repo-empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"No Data to Show\"))));\n  }\n\n}\n\nexport default Repo;","map":{"version":3,"sources":["D:/git/repos/src/compenent/repo.js"],"names":["React","Component","Input","Table","searchActions","searchService","Search","Repo","constructor","props","getRepos","username","resData","getSearchedRepo","then","res","console","log","forEach","value","push","title","name","description","lastUpdated","updated_at","rej","setState","data","state","columns","dataIndex","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import {connect} from 'react-redux';\r\nimport { Component } from 'react';\r\nimport { Input, Table } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { searchActions } from '../action/searchActions';\r\nimport { searchService } from '../services/searchService';\r\nimport './repo.css'\r\n\r\nconst { Search } = Input;\r\n\r\nclass Repo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [\r\n                {\r\n                    title: 'Title',\r\n                    dataIndex: 'title',\r\n                },\r\n                {\r\n                    title: 'Description',\r\n                    dataIndex: 'description',\r\n                },\r\n                {\r\n                    title: 'LastUpdated',\r\n                    dataIndex: 'lastUpdated',\r\n                },\r\n            ],\r\n            data: []\r\n        }\r\n    }\r\n\r\n\r\n    getRepos = (username) => {\r\n        let resData = [];\r\n        if (username) {\r\n            searchService.getSearchedRepo(username).then(\r\n                function (res) {\r\n                    console.log(res)\r\n\r\n                    res && res.forEach((value) => {\r\n                        resData.push({\r\n                            title: value.name,\r\n                            description: value.description,\r\n                            lastUpdated: value.updated_at\r\n                        });\r\n                    })\r\n                }, function (rej) {\r\n                    console.log(rej);\r\n                    this.setState({\r\n                        data: resData\r\n                    })\r\n                }\r\n            ).then(() => {\r\n                this.setState({\r\n                    data: resData\r\n                })\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { columns, data } = this.state\r\n        return (\r\n            <div>\r\n\r\n                <div>\r\n                    <h1>Find Your Repo...</h1>\r\n                    <div className='search-user'>\r\n                        <Search\r\n                            placeholder=\"input search text\"\r\n                            enterButton=\"Search\"\r\n                            size=\"large\"\r\n                            onSearch={value => this.getRepos(value)}\r\n                        />\r\n                    </div>\r\n                    {data.length > 0 ?\r\n                        <div className='repo-data'>\r\n                            <Table columns={columns} dataSource={data} size=\"middle\" />\r\n                        </div>\r\n                        : <div className=\"repo-empty\">\r\n                            <h1>No Data to Show</h1>\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Repo;\r\n"]},"metadata":{},"sourceType":"module"}